/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.dinemore.client.view;

import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import lk.ijse.dinemore.client.connector.ServerConnector;
import lk.ijse.dinemore.client.observer.custom.impl.ChefObserverImpl;
import lk.ijse.dinemore.common.controller.ChefController;
import lk.ijse.dinemore.common.dto.OrderDTO;
import lk.ijse.dinemore.common.factory.ControllerFactory;

/**
 *
 * @author HP
 */
public class ChefView extends javax.swing.JFrame {

    private ChefObserverImpl chefObserverImpl;
    private ChefController chefController;

    /**
     * Creates new form ChefView
     */
    public ChefView() {
        initComponents();
        setDateTime();
        try {
            chefObserverImpl = new ChefObserverImpl(this);
            ControllerFactory controllerFactory = ServerConnector.getInstance().getControllerFactory();
            chefController = controllerFactory.getChefController();
            chefController.registerObserver(chefObserverImpl);
        } catch (Exception ex) {
            Logger.getLogger(ChefView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        comboChefID = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtOrderID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAddedTime = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        btnOrderFinish = new javax.swing.JButton();
        btnOrderTake = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFinishedOrdersChef = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTakenTime = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePendingOrdersChef = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblDateChef = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTimeChef = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(485, 520));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboChefID.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        comboChefID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ch-001", "CH-002", "Ch-003", "Ch-004" }));
        comboChefID.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel3.add(comboChefID, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Chef ID : ");
        jLabel3.setOpaque(true);
        jLabel3.setPreferredSize(new java.awt.Dimension(200, 50));
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 80, -1));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Added Time");
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        txtCustomerName.setEditable(false);
        txtCustomerName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtCustomerName.setPreferredSize(new java.awt.Dimension(250, 40));
        txtCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNameActionPerformed(evt);
            }
        });
        jPanel3.add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, -1));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setText("Customer Name");
        jLabel5.setOpaque(true);
        jLabel5.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        txtOrderID.setEditable(false);
        txtOrderID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtOrderID.setPreferredSize(new java.awt.Dimension(250, 40));
        txtOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIDActionPerformed(evt);
            }
        });
        jPanel3.add(txtOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, -1, -1));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setText("Order ID");
        jLabel6.setOpaque(true);
        jLabel6.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        txtAddedTime.setEditable(false);
        txtAddedTime.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtAddedTime.setPreferredSize(new java.awt.Dimension(250, 40));
        txtAddedTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddedTimeActionPerformed(evt);
            }
        });
        jPanel3.add(txtAddedTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        txtQty.setEditable(false);
        txtQty.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtQty.setPreferredSize(new java.awt.Dimension(250, 40));
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        jPanel3.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, -1));

        btnOrderFinish.setBackground(new java.awt.Color(0, 153, 51));
        btnOrderFinish.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnOrderFinish.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderFinish.setText("Finish");
        btnOrderFinish.setPreferredSize(new java.awt.Dimension(100, 40));
        btnOrderFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderFinishActionPerformed(evt);
            }
        });
        jPanel3.add(btnOrderFinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, -1, -1));

        btnOrderTake.setBackground(new java.awt.Color(0, 0, 204));
        btnOrderTake.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnOrderTake.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderTake.setText("Take");
        btnOrderTake.setPreferredSize(new java.awt.Dimension(100, 40));
        btnOrderTake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderTakeActionPerformed(evt);
            }
        });
        jPanel3.add(btnOrderTake, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, -1));

        tableFinishedOrdersChef.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tableFinishedOrdersChef.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Cust Name", "Qty", "Added", "Taken", "Finished"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFinishedOrdersChef.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tableFinishedOrdersChef.setSelectionForeground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setViewportView(tableFinishedOrdersChef);
        if (tableFinishedOrdersChef.getColumnModel().getColumnCount() > 0) {
            tableFinishedOrdersChef.getColumnModel().getColumn(0).setResizable(false);
            tableFinishedOrdersChef.getColumnModel().getColumn(1).setResizable(false);
            tableFinishedOrdersChef.getColumnModel().getColumn(2).setResizable(false);
            tableFinishedOrdersChef.getColumnModel().getColumn(3).setResizable(false);
            tableFinishedOrdersChef.getColumnModel().getColumn(4).setResizable(false);
            tableFinishedOrdersChef.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 480, 120));

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel9.setText("Quantity");
        jLabel9.setOpaque(true);
        jLabel9.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("  Finished Orders");
        jLabel2.setOpaque(true);
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 480, 40));

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setText("Taken Time");
        jLabel10.setOpaque(true);
        jLabel10.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        txtTakenTime.setEditable(false);
        txtTakenTime.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtTakenTime.setPreferredSize(new java.awt.Dimension(250, 40));
        txtTakenTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTakenTimeActionPerformed(evt);
            }
        });
        jPanel3.add(txtTakenTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 70, -1, -1));

        jPanel2.setPreferredSize(new java.awt.Dimension(485, 520));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablePendingOrdersChef.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tablePendingOrdersChef.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Customer Name", "Added Time", "Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePendingOrdersChef.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tablePendingOrdersChef.setSelectionForeground(new java.awt.Color(0, 0, 102));
        tablePendingOrdersChef.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePendingOrdersChefMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablePendingOrdersChef);
        if (tablePendingOrdersChef.getColumnModel().getColumnCount() > 0) {
            tablePendingOrdersChef.getColumnModel().getColumn(0).setResizable(false);
            tablePendingOrdersChef.getColumnModel().getColumn(1).setResizable(false);
            tablePendingOrdersChef.getColumnModel().getColumn(2).setResizable(false);
            tablePendingOrdersChef.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 50, 480, 470));

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("  Pending Orders");
        jLabel7.setOpaque(true);
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jPanel4.setPreferredSize(new java.awt.Dimension(980, 50));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDateChef.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        lblDateChef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDateChef.setOpaque(true);
        lblDateChef.setPreferredSize(new java.awt.Dimension(680, 50));
        jPanel4.add(lblDateChef, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 230, -1));

        jLabel4.setFont(new java.awt.Font("Calibri", 3, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Dinemore-Chef Area");
        jLabel4.setOpaque(true);
        jLabel4.setPreferredSize(new java.awt.Dimension(680, 50));
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, -1));

        lblTimeChef.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        lblTimeChef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTimeChef.setOpaque(true);
        lblTimeChef.setPreferredSize(new java.awt.Dimension(680, 50));
        jPanel4.add(lblTimeChef, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 230, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerNameActionPerformed

    private void txtOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIDActionPerformed

    private void txtAddedTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddedTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddedTimeActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed

    private void btnOrderTakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderTakeActionPerformed
        try {
            String id = txtOrderID.getText();
            String chefID = comboChefID.getSelectedItem().toString();
            String time = lblTimeChef.getText();
            boolean setStatusTaken = chefController.setStatusTaken(id, chefID, time);
            txtTakenTime.setText(time);
            if (setStatusTaken) {
                JOptionPane.showMessageDialog(this, "Order has taken");
            } else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception ex) {
            Logger.getLogger(ChefView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOrderTakeActionPerformed

    private void btnOrderFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderFinishActionPerformed

        try {
            String id = txtOrderID.getText();
            String time = lblTimeChef.getText();
            boolean setStatusTaken = chefController.setStatusFinished(id, time);
            if (setStatusTaken) {
                JOptionPane.showMessageDialog(this, "Order has finished");
            } else {
                JOptionPane.showMessageDialog(this, "Error");
            }            
            addDataToTable();
            clear();
        } catch (Exception ex) {
            Logger.getLogger(ChefView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnOrderFinishActionPerformed

    private void tablePendingOrdersChefMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePendingOrdersChefMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tablePendingOrdersChef.getModel();
        int selectedRow = tablePendingOrdersChef.getSelectedRow();
        String orderID = dtm.getValueAt(selectedRow, 0).toString();
        String addedDate = dtm.getValueAt(selectedRow, 1).toString();
        String addedTime = dtm.getValueAt(selectedRow, 2).toString();
        String qty = dtm.getValueAt(selectedRow, 3).toString();

        txtOrderID.setText(orderID);
        txtCustomerName.setText(addedDate);
        txtAddedTime.setText(addedTime);
        txtQty.setText(qty);
    }//GEN-LAST:event_tablePendingOrdersChefMouseClicked

    private void txtTakenTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTakenTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTakenTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChefView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChefView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChefView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChefView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChefView().setVisible(true);
            }
        });
    }

    public void updateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tablePendingOrdersChef.getModel();
        dtm.setRowCount(0);

        try {
            ArrayList<OrderDTO> allPendingOrders = chefController.getAllPendingOrders();

            for (OrderDTO order : allPendingOrders) {
                Object[] rowData = {
                    order.getOrderID(),
                    order.getCustomerName(),
                    order.getAddedTime(),
                    order.getQty()
                };
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelephoneOperatorView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrderFinish;
    private javax.swing.JButton btnOrderTake;
    private javax.swing.JComboBox<String> comboChefID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDateChef;
    private javax.swing.JLabel lblTimeChef;
    private javax.swing.JTable tableFinishedOrdersChef;
    private javax.swing.JTable tablePendingOrdersChef;
    private javax.swing.JTextField txtAddedTime;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtOrderID;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtTakenTime;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        txtOrderID.setText("");        
        txtCustomerName.setText("");
        txtAddedTime.setText("");
        txtQty.setText("");
        txtTakenTime.setText("");
    }

    public void setDateTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                Date date = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("hh:mm a");
                lblTimeChef.setText(timeFormat.format(date));
                SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");
                lblDateChef.setText(dateFormat.format(date));
            }
        }
        ).start();
    }

    private void addDataToTable() {
        DefaultTableModel dtm = (DefaultTableModel) tableFinishedOrdersChef.getModel();

        String orderID = txtOrderID.getText();
        String customerName = txtCustomerName.getText();
        String qty = txtQty.getText();
        String addedTime = txtAddedTime.getText();
        String takenTime = txtTakenTime.getText();
        String finishedTime = lblTimeChef.getText();

        Object[] rowData = {
            orderID,
            customerName,
            qty,
            addedTime,
            takenTime,
            finishedTime
        };
        dtm.addRow(rowData);
    }
}
